module basePklProject

amends "pkl:Project"

import "pkl:reflect"

local myModule = reflect.Module(module)

local packageName: String =
  findRootModule(reflect.Module(module))
    .relativePathTo(module)
    .last

local function findRootModule(mod: reflect.Module): Module =
  let (supermodule = mod.supermodule)
    if (supermodule == null || !supermodule.isAmend) mod.reflectee
    else findRootModule(supermodule)

/***

package {
  name = packageName
  apiTests = tests // api tests are shared with module tests
  baseUri = "package://pkg.pkl-lang.org/pkl-pantry/\(name)"
  packageZipUrl = "https://github.com/apple/pkl-pantry/releases/download/\(name)@\(version)/\(name)@\(version).zip"
  license = "Apache-2.0"
  authors {
    "The Pkl Authors <pkl-oss@group.apple.com>"
  }
  exclude {
    "examples/**"
    "tests/**"
  }
  description = myModule.docComment
  issueTracker = "https://github.com/apple/pkl-pantry/issues"
  sourceCode = "https://github.com/apple/pkl-pantry/tree/\(name)@\(version)/packages/\(name)"
  sourceCodeUrlScheme = "https://github.com/apple/pkl-pantry/blob/\(name)@\(version)/packages/\(name)%{path}#L%{line}-%{endLine}"
}

tests {
  for (test in allTests) {
    when (test.split("/").first == package.name) {
      test.replaceFirst(package.name, ".")
    }
  }
}

package {
  name = "pkl-tsConfig"
  baseUri = "package://pkg.pkl-lang.org/github.com/\(githubUser)/\(name)" 
  version = read("file:version.txt").text.trim()
  packageZipUrl = "https://github.com/\(githubUser)/\(name)/releases/download/\(name)@\(version)/\(name)@\(version).zip"
}

***/