/* This file was generated by `pkl-typescript` from Pkl module `config`. */
/* DO NOT EDIT! */
/* istanbul ignore file */
/* eslint-disable */
import * as pklTypescript from "@pkl-community/pkl-typescript"

// Ref: Module root.
export interface Config {
  useBase: boolean

  useStrict: boolean

  useStrictest: boolean

  useTranspiling: boolean

  useLibrary: boolean

  useMonorepo: boolean

  useDom: boolean

  base: pklTypescript.Any

  strict: pklTypescript.Any

  strictest: pklTypescript.Any

  transpiling: pklTypescript.Any

  nottranspiling: pklTypescript.Any

  library: pklTypescript.Any

  monorepo: pklTypescript.Any

  dom: pklTypescript.Any

  notdom: pklTypescript.Any

  compilerOptions: pklTypescript.Any

  output: pklTypescript.Any
}

// LoadFromPath loads the pkl module at the given path and evaluates it into a Config
export const loadFromPath = async (path: string): Promise<Config> => {
  const evaluator = await pklTypescript.newEvaluator(pklTypescript.PreconfiguredOptions);
  try {
    const result = await load(evaluator, pklTypescript.FileSource(path));
    return result
  } finally {
    evaluator.close()
  }
};

export const load = (evaluator: pklTypescript.Evaluator, source: pklTypescript.ModuleSource): Promise<Config> =>
  evaluator.evaluateModule(source) as Promise<Config>;
